name: Build and Push Docker Image to Docker Hub

on:
  push:
    branches:
      - main
    paths-ignore:
      - deploymentservice.yml
  pull_request:
    branches:
      - main
    paths-ignore:
      - deploymentservice.yml

jobs:
  # Step 1: Maven Build Stage
  maven-build:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    outputs:
      artifact-name: my-app.jar
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Build with Maven
        run: mvn clean package -DskipTests=true

      - name: Archive JAR File
        uses: actions/upload-artifact@v4
        with:
          name: my-app
          path: target/*.jar

  # Step 2: Docker Build Stage
  docker-build:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    needs: maven-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}

      - name: Download Built JAR
        uses: actions/download-artifact@v4
        with:
          name: my-app
          path: target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          docker build -t shopping-cart:latest -f Dockerfile .

      - name: Save Docker Image
        run: docker save shopping-cart:latest -o shopping-cart.tar

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: shopping-cart.tar

  # Step 3: Docker Push Stage
  docker-push:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}

      - name: Download Docker Image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker Image
        run: docker load -i shopping-cart.tar

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and Push Docker Image
        run: |
          docker tag shopping-cart:latest ${{ secrets.DOCKER_USERNAME }}/shopping-cart:latest
          docker tag shopping-cart:latest ${{ secrets.DOCKER_USERNAME }}/shopping-cart:${{ github.run_number }}
          docker push ${{ secrets.DOCKER_USERNAME }}/shopping-cart:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/shopping-cart:${{ github.run_number }}

      - name: Update deployment YAML with new image tag
        run: |
          sed -i "s|image: .*/shopping-cart:.*|image: ${{ secrets.DOCKER_USERNAME }}/shopping-cart:${{ github.run_number }}|" deploymentservice.yml

      - name: Commit and Push Updated YAML
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add deploymentservice.yml
          git commit -m "chore: update Docker image tag in deploymentservice.yml" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GIT_TOKEN }}@github.com/${{ github.repository }}
          git push origin main
