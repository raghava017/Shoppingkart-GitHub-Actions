name: Build and Push Docker Image to Docker Hub

on:
  push:
    branches:
      - main
    paths-ignore:
      - deploymentservice.yml
  pull_request:
    branches:
      - main

env:
  JAVA_VERSION: '11'
  DOCKER_IMAGE_NAME: shopping-cart
  ARTIFACT_NAME: my-app
  ARTIFACT_JAR_PATH: target/*.jar
  ARTIFACT_DOCKER_TAR: shopping-cart.tar
  DEPLOYMENT_FILE: deploymentservice.yml
  TRIVY_REPORT_DIR: trivy-reports
  TRIVY_REPORT_FILE: trivy-report.html
  TRIVY_REPORT_ZIP: trivy-report.zip
  allowed_senderemail: raghava.ankireddypalle.aws@gmail.com
  allowed_receiveremail: raghava.ankireddypalle.aws@gmail.com

jobs:
  pre-deployment-email:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Send Pre-Deployment Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "POC_Project - üöÄ Deployment Started"
          to: ${{ env.allowed_receiveremail }}
          from: ${{ env.allowed_senderemail }}
          content_type: text
          body: |
            Hi Team,

            The deployment of the latest build for POC_Project to the lower environments is starting now.
            Please avoid interacting with the lower environments until the deployment completes successfully.

            You will receive another update once the deployment has either succeeded or failed.

            Thanks,  
            Veera Raghava Ankireddypalle  
            DevOps Engineer  
            M: +91 9876543210

  maven-build:
    needs: pre-deployment-email
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ env.ARTIFACT_NAME }}.jar
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'zulu'

      - name: Build with Maven
        #run: mvn clean package -DskipTests=true

      - name: Archive JAR File
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_JAR_PATH }}

  docker-build:
    runs-on: ubuntu-latest
    needs: maven-build
    outputs:
      docker-image-name: ${{ env.DOCKER_IMAGE_NAME }}:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}

      - name: Download Built JAR
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest -f Dockerfile .

      - name: Save Docker Image
        run: docker save ${{ env.DOCKER_IMAGE_NAME }}:latest -o ${{ env.ARTIFACT_DOCKER_TAR }}

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: ${{ env.ARTIFACT_DOCKER_TAR }}

  trivy-scan:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Docker Image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker Image
        run: docker load -i ${{ env.ARTIFACT_DOCKER_TAR }}

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget zip -y
          wget -qO- https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/trivy-archive-keyring.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Scan Docker Image and Save HTML Report
        run: |
          mkdir -p ${{ env.TRIVY_REPORT_DIR }}
          wget -O html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl
          trivy image --format template --template "@html.tpl" -o ${{ env.TRIVY_REPORT_DIR }}/${{ env.TRIVY_REPORT_FILE }} ${{ env.DOCKER_IMAGE_NAME }}:latest
          cd ${{ env.TRIVY_REPORT_DIR }}
          zip ${{ env.TRIVY_REPORT_ZIP }} ${{ env.TRIVY_REPORT_FILE }}

      - name: Upload Zipped Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report-html
          path: ${{ env.TRIVY_REPORT_DIR }}/${{ env.TRIVY_REPORT_ZIP }}

  docker-push:
    runs-on: ubuntu-latest
    needs: [docker-build, trivy-scan]
    outputs:
      public_ip: 123.456.789.0 # placeholder, replace with real IP if needed
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}

      - name: Download Docker Image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker Image
        run: docker load -i ${{ env.ARTIFACT_DOCKER_TAR }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and Push Docker Image
        run: |
          docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }}

      - name: Update deployment YAML with new image tag
        run: |
          sed -i "s|image: .*/${{ env.DOCKER_IMAGE_NAME }}:.*|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }}|" ${{ env.DEPLOYMENT_FILE }}

      - name: Commit and Push Updated YAML
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add ${{ env.DEPLOYMENT_FILE }}
          git commit -m "chore: update Docker image tag" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GIT_TOKEN }}@github.com/${{ github.repository }}
          git push origin main

  email-success:
    needs: docker-push
    if: ${{ needs.docker-push.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Trivy Report
        uses: actions/download-artifact@v4
        with:
          name: trivy-report-html
          path: reports

      - name: Send Success Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "POC_Project - ‚úÖ Deployment Success"
          to: ${{ env.allowed_receiveremail }}
          from: ${{ env.allowed_senderemail }}
          content_type: text
          attachments: reports/trivy-report.zip
          body: |
            Hi Team,

            This is to inform you that a new build of POC_Project has been successfully deployed.
            Please proceed with testing the build using Postman or any relevant API testing tool.

            API Endpoint: http://${{ needs.docker-push.outputs.public_ip }}:5033

            Thanks,
            Veera Raghava Ankireddypalle
            DevOps Engineer
            M: +91 9876543210

  email-failure:
    needs: docker-push
    if: ${{ needs.docker-push.result == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - name: Send Failure Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "POC_Project - ‚ùå Deployment Failed"
          to: ${{ env.allowed_receiveremail }}
          from: ${{ env.allowed_senderemail }}
          content_type: text
          body: |
            Hi Team,

            This mail is to inform you that the new build of POC_Project has failed to deploy.
            Please check the build logs for more details.

            Logs:
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            A previous backup build has been deployed in the meantime.

            Thanks,
            Veera Raghava Ankireddypalle
            DevOps Engineer
            M: +91 9876543210
