name: Secure CI/CD Pipeline for Shopping Cart

on:
  push:
    branches: [main]
    paths-ignore: [deploymentservice.yml]
  pull_request:
    branches: [main]

env:
  JAVA_VERSION: '11'
  DOCKER_IMAGE_NAME: shopping-cart
  ARTIFACT_NAME: my-app
  ARTIFACT_JAR_PATH: target/*.jar
  ARTIFACT_DOCKER_TAR: shopping-cart.tar
  DEPLOYMENT_FILE: deploymentservice.yml
  TRIVY_REPORT_DIR: trivy-reports
  TRIVY_REPORT_FILE: trivy-report.html
  TRIVY_REPORT_ZIP: trivy-report.zip
  allowed_senderemail: raghava.ankireddypalle.aws@gmail.com
  allowed_receiveremail: raghava.ankireddypalle.aws@gmail.com
  REQUIRED_COMMIT_MESSAGE: 'please build'

defaults:
  run:
    shell: bash

jobs:
  check-commit-message:
    runs-on: ubuntu-latest
    outputs:
      is_valid: ${{ steps.check-msg.outputs.valid }}
    steps:
      - id: check-msg
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"${{ env.REQUIRED_COMMIT_MESSAGE }}"* ]]; then
            echo "valid=true" >> "$GITHUB_OUTPUT"
          else
            echo "‚ùå Commit message missing required phrase: '${{ env.REQUIRED_COMMIT_MESSAGE }}'"
            echo "valid=false" >> "$GITHUB_OUTPUT"
          fi

  pre-deployment-email:
    needs: check-commit-message
    if: needs.check-commit-message.outputs.is_valid == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Send Pre-Deployment Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "POC_Project - üöÄ Deployment Started"
          to: ${{ env.allowed_receiveremail }}
          from: ${{ env.allowed_senderemail }}
          content_type: text
          body: |
            Hi Team,

            "Deployment process has started. Kindly avoid using lower environments during this time."

            Thanks,  
            Veera Raghava Ankireddypalle

  maven-build:
    needs: pre-deployment-email
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ env.ARTIFACT_NAME }}.jar
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build with Maven
        run: mvn clean package -DskipTests=true

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_JAR_PATH }}

  docker-build:
    needs: maven-build
    runs-on: ubuntu-latest
    outputs:
      docker-image-name: ${{ env.DOCKER_IMAGE_NAME }}:latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}

      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: target/

      - uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .

      - name: Save Docker Image
        run: docker save ${{ env.DOCKER_IMAGE_NAME }}:latest -o ${{ env.ARTIFACT_DOCKER_TAR }}

      - name: Upload Docker Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: ${{ env.ARTIFACT_DOCKER_TAR }}

  trivy-scan:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker Image
        run: docker load -i ${{ env.ARTIFACT_DOCKER_TAR }}

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget zip -y
          wget -qO- https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/trivy-archive-keyring.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update && sudo apt-get install trivy -y

      - name: Scan with Trivy
        run: |
          mkdir -p ${{ env.TRIVY_REPORT_DIR }}
          wget -O html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl
          trivy image --format template --template "@html.tpl" -o ${{ env.TRIVY_REPORT_DIR }}/${{ env.TRIVY_REPORT_FILE }} ${{ env.DOCKER_IMAGE_NAME }}:latest
          cd ${{ env.TRIVY_REPORT_DIR }} && zip ${{ env.TRIVY_REPORT_ZIP }} ${{ env.TRIVY_REPORT_FILE }}

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report-html
          path: ${{ env.TRIVY_REPORT_DIR }}/${{ env.TRIVY_REPORT_ZIP }}

  docker-push:
    needs: [docker-build, trivy-scan]
    runs-on: ubuntu-latest
    outputs:
      public_ip: 123.456.789.0
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}

      - uses: actions/download-artifact@v4
        with:
          name: docker-image

      - run: docker load -i ${{ env.ARTIFACT_DOCKER_TAR }}

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }} --all-tags

      - name: Update Deployment YAML
        run: |
          sed -i "s|image: .*/${{ env.DOCKER_IMAGE_NAME }}:.*|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }}|" ${{ env.DEPLOYMENT_FILE }}
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add ${{ env.DEPLOYMENT_FILE }}
          git commit -m "chore: update Docker tag" || echo "No changes to commit"
          git push origin main

  email-success:
    needs: docker-push
    if: needs.docker-push.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: trivy-report-html
          path: reports

      - name: Send Success Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "POC_Project - ‚úÖ Deployment Success"
          to: ${{ env.allowed_receiveremail }}
          from: ${{ env.allowed_senderemail }}
          content_type: text
          attachments: reports/${{ env.TRIVY_REPORT_ZIP }}
          body: |
            Hi Team,

            New build deployed successfully.  
            API Endpoint: http://${{ needs.docker-push.outputs.public_ip }}:5033

            Thanks,  
            Veera Raghava Ankireddypalle

  email-failure:
    needs: docker-push
    if: needs.docker-push.result == 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: Send Failure Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "POC_Project - ‚ùå Deployment Failed"
          to: ${{ env.allowed_receiveremail }}
          from: ${{ env.allowed_senderemail }}
          content_type: text
          body: |
            Hi Team,

            Deployment failed. Check logs:  
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            Thanks,  
            Veera Raghava Ankireddypalle
